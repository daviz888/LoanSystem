@model LoanSystem.Domain.Entities.Product

@{
    ViewBag.Title = ViewBag.ProductAction;
}


@using (Html.BeginForm("Update", "Product", FormMethod.Post, new { enctype ="multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    <div class="card mt-2">
        <div class="card-header"><h3>@ViewBag.ProductAction</h3></div>
        <div class="card-body">


            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control"}, rows = 5 })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control text-uppercase" } })
                        @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    <label class="control-label col-md-2">Photo</label>
                    <div class="col-md-10">
                        <input type="file" class="form-control-file" id="Image" name="Image">
                    </div>
                </div>
                <div class="form-group">
                    @if (Model.ImageData == null)
                    {
                        <div class="form-control-static">No Image</div>
                    }
                    else
                    {
                        <img class="img-thumbnail" width="150" height="150"
                             src="@Url.Action("GetImage", "Product",
                         new { Model.ProductID })" />
                    }
                </div>
            </div>
        </div>
        <div class="card-footer">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
        </div>
    </div>
}

